# Makefile to build the SDL2_mixer library
# 
# -D__SDL_DEBUG


# wav music support
USE_WAV=1
# ogg/vorbis music support
USE_OGG=1
# use integer-only Tremor (libvorbisidec) instead of libvorbis?
USE_TREMOR=1
# use stb_vorbis instead of libvorbis?
USE_STBVORBIS=0
# flac music support (using libflac)
USE_FLAC=1
# flac music support (using dr_flac)
USE_DRFLAC=0
# opus music support
USE_OPUS=1
# mp3 music support (using mpg123)
USE_MPG123=1
# mp3 music support (using mini_mp3)
USE_MINIMP3=0
# midi music support (using timidity)
USE_TIMIDITY=1
# midi music support (using fluidsynth)
USE_FLUIDSYNTH=0
# tracker music support (using libxmp)
USE_XMP=1
# tracker music support (using libmodplug)
USE_MODPLUG=0
# GME
USE_GME=0
# wavpack music support
USE_WAVPACK=0


CC  = ppc-morphos-gcc-11 -noixemul 
AR	= ppc-morphos-ar

INCLUDE =  -IMorphOS/sdk -I./include -I./src/ -I./src/codecs -I/usr/local/include/SDL2 -I. -I/usr/local/include -I/usr/local/include/opus
CFLAGS  =  -mresident32 -O2 -mcpu=750 -mtune=7450 -Wno-pointer-sign -fno-strict-aliasing -Wall -ffast-math -DHAVE_SNPRINTF -DHAVE_UNISTD_H -DHAVE_SETBUF -DHAVE_FORK $(INCLUDE)
LIBS += -L/usr/local/lib

ifeq ($(USE_WAV),1)
CFLAGS+= -DMUSIC_WAV
endif

ifeq ($(USE_OGG),1)
CFLAGS+= -DMUSIC_OGG
ifeq ($(USE_STBVORBIS),1)
CFLAGS+= -DOGG_USE_STB
else
ifeq ($(USE_TREMOR),1)
CFLAGS+= -DOGG_USE_TREMOR
LIBS += -lvorbisidec
else
CFLAGS+= -D__MORPHOS_SHAREDLIBS -DUSE_VORBISLIB 
endif
NEED_LIBOGG=1
endif
endif

ifeq ($(USE_FLAC),1)
CFLAGS+= -DMUSIC_FLAC_LIBFLAC
LIBS+= -lflac 
endif

ifeq ($(USE_DRFLAC),1)
CFLAGS+= -DMUSIC_FLAC_DRFLAC
endif

ifeq ($(USE_OPUS),1)
CFLAGS+= -DMUSIC_OPUS
LIBS+= -lopusfile -lopus
NEED_LIBOGG=1
endif

ifeq ($(USE_MPG123),1)
CFLAGS+= -DMUSIC_MP3_MPG123
LIBS+= -lmpg123_shared 
endif

ifeq ($(USE_MINIMP3),1)
CFLAGS+= -DMUSIC_MP3_MINIMP3
endif

ifeq ($(USE_XMP),1)
CFLAGS+= -DMUSIC_MOD_XMP
LIBS+= -lxmp
endif

ifeq ($(USE_MODPLUG),1)
CFLAGS+= -DMUSIC_MOD_MODPLUG
LIBS+= -lmodplug
endif

ifeq ($(USE_TIMIDITY),1)
CFLAGS+= -DMUSIC_MID_TIMIDITY 
endif

ifeq ($(USE_FLUIDSYNTH),1)
CFLAGS+= -DMUSIC_MID_FLUIDSYNTH
LIBS+= -lfluidsynth 
endif

ifeq ($(USE_GME),1)
CFLAGS+= -DMUSIC_GME
LIBS+= -lgme -lz_shared -lstdc++
endif

ifeq ($(USE_WAVPACK),1)
CFLAGS+= -DMUSIC_WAVPACK
LIBS+= -lwavpack
endif

ifeq ($(NEED_LIBOGG),1)
LIBS+= -logg -lm 
endif

AMIGADATE = $(shell date +"%-d.%-m.%Y")

ECHE = echo -e
BOLD = \033[1m
NRML = \033[22m

COMPILING = @$(ECHE) "compiling $(BOLD)$@$(NRML)..."
LINKING = @$(ECHE) "linking $(BOLD)$@$(NRML)..."
STRIPPING = @$(ECHE) "stripping $(BOLD)$@$(NRML)..."
ARCHIVING = @$(ECHE) "archiving $(BOLD)$@$(NRML)..."
HEADERING = @$(ECHE) "creating headers files $(BOLD)$@$(NRML)..."

TARGET  = libSDL2_mixer.a
LIBRARY = sdl2_mixer.library

SOURCES = \
	src/mixer.c \
	src/music.c \
	src/utils.c \
	src/effect_stereoreverse.c \
	src/effects_internal.c \
	src/effect_position.c \
	src/codecs/load_aiff.c \
	src/codecs/load_voc.c \
	src/codecs/mp3utils.c \
	src/codecs/music_cmd.c \
	src/codecs/music_flac.c \
	src/codecs/music_drflac.c \
	src/codecs/music_wavpack.c \
	src/codecs/music_fluidsynth.c \
	src/codecs/music_modplug.c \
	src/codecs/music_mpg123.c \
	src/codecs/music_minimp3.c \
	src/codecs/music_nativemidi.c \
	src/codecs/music_opus.c \
	src/codecs/music_ogg.c \
	src/codecs/music_gme.c \
	src/codecs/music_timidity.c \
	src/codecs/music_wav.c \
	src/codecs/music_xmp.c \
	src/codecs/timidity/common.c src/codecs/timidity/instrum.c src/codecs/timidity/mix.c src/codecs/timidity/output.c \
	src/codecs/timidity/playmidi.c src/codecs/timidity/readmidi.c src/codecs/timidity/resample.c \
	src/codecs/timidity/tables.c src/codecs/timidity/timidity.c 
		 	

CORESOURCES = MorphOS/*.c
COREOBJECTS = $(shell echo $(CORESOURCES) | sed -e 's,\.c,\.o,g')

OBJECTS = $(shell echo $(SOURCES) | sed -e 's,\.c,\.o,g')

all: $(LIBRARY) sdklibs

headers:
	$(HEADERING)
	@cvinclude.pl --fd=MorphOS/sdk/fd/sdl2_mixer_lib.fd --clib=MorphOS/sdk/clib/sdl2_mixer_protos.h --proto=MorphOS/sdk/proto/sdl2_mixer.h
	@cvinclude.pl --fd=MorphOS/sdk/fd/sdl2_mixer_lib.fd --clib=MorphOS/sdk/clib/sdl2_mixer_protos.h --inline=MorphOS/sdk/ppcinline/sdl2_mixer.h

sdklibs:
	@cd MorphOS/devenv; if ! $(MAKE) all; then exit 1; fi;

sdk: sdklibs
	cp include/SDL_mixer.h /usr/local/include/SDL2
	cp MorphOS/devenv/lib/libSDL2_mixer.a /usr/local/lib/libSDL2_mixer.a
	cp MorphOS/devenv/lib/libb32/libSDL2_mixer.a /usr/local/lib/libb32/libSDL2_mixer.a

install: $(LIBRARY)
	@cp $(LIBRARY) LIBS:
	flushlib $(LIBRARY)

MorphOS/MIX_library.o: MorphOS/MIX_library.c MorphOS/MIX_library.h MorphOS/MIX_stubs.h
	$(COMPILING)
	$(CC) -mcpu=750 $(INCLUDE) -Wall -fno-strict-aliasing -D__AMIGADATE__=\"$(AMIGADATE)\" -DAROS_ALMOST_COMPATIBLE -o $@ -c $*.c

src/music.o: src/music.c
	$(CC) $(CFLAGS) -O0 -o $@ -c $^
	
$(TARGET): $(OBJECTS)
	$(ARCHIVING)
	@$(AR) crvs $@ $^

$(LIBRARY): $(TARGET) $(COREOBJECTS)
	$(LINKING)
	$(CC) -nostartfiles -mresident32 -Wl,-Map=sdl2_mixer.map $(COREOBJECTS) -o $@.db -L. -lSDL2_mixer -L/usr/local/lib -lSDL2 -lm $(LIBS)
	$(STRIPPING)
	@ppc-morphos-strip -o $@ --remove-section=.comment $@.db

playwave: sdklibs playwave.c
	$(CC) -O2 -Wall playwave.c -o $@ $(INCLUDE) -DUSE_INLINE_STDARG  -LMorphOS/devenv/lib -L/usr/local/lib -lSDL2_mixer -lSDL2

playmus: sdklibs playmus.c
	$(CC) -O2 -Wall playmus.c -o $@ $(INCLUDE) -DUSE_INLINE_STDARG -LMorphOS/devenv/lib -L/usr/local/lib -lSDL2_mixer -lSDL2

clean:
	rm -f $(LIBRARY) $(TARGET) $(OBJECTS) $(COREOBJECTS) *.db *.s
	rm -rf MorphOS/devenv/*.o morphos/devenv/lib morphos/devenv/*.s

dump:
	ppc-morphos-objdump --disassemble-all --reloc $(LIBRARY).db >$(LIBRARY).s
